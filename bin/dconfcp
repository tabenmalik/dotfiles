#!/usr/bin/env bash

PROGRAM=dconfcp
VERSION=0.0.3

usage () {
    cat <<EOF
Usage: $PROGRAM [OPTION]... [FROM_PROFILE] TO_PROFILE PATH
Copy values from one dconf database (default from DCONF_PROFILE) to another.
Copy all values changed during some period of time with --watch.

Options:
  -w, --watch        watch and copy changes of a key or directory
  -f                 ignore changes to non-writable keys
  -h, --help         display this help and exit
  -V, --version      output version information and exit
EOF
}

version () {
    cat <<EOF
$PROGRAM $VERSION

Written by Taben Malik
EOF
}

TEMP=$(getopt -o '+fwVh' --long 'watch,version,help' -n "$PROGRAM" -- "$@")

if [ $? -ne 0 ]
then
    echo "Try '$PROGRAM --help' for more information" >&2
    exit 1
fi

eval set -- "$TEMP"
unset TEMP

watch=0
load_args=()

while true
do
    case "$1" in
        '-f')
            load_args+=("-f")
            shift
            continue
        ;;
        '-w'|'--watch')
            watch=1
            shift
            continue
        ;;
        '-h'|'--help')
            usage
            exit 0
        ;;
        '-V'|'--version')
            version
            exit 0
        ;;
        '--')
            shift
            break
        ;;
        *)
            echo 'Internal error!' >&2
            exit 1
        ;;
    esac
done

if [ $# -ne 2 ] && [ $# -ne 3 ]
then
    echo 'Bad Taben'
    usage
    exit 1
fi

PROFILE_FROM=$DCONF_PROFILE

if [ $# -eq 3 ]
then
    PROFILE_FROM=$1
    shift
fi


PROFILE_TO=$1
DCONF_PATH=$2
shift 2

dconfcpdir () {
    dir=$1
    DCONF_PROFILE=$PROFILE_FROM dconf dump "$dir" | DCONF_PROFILE="$PROFILE_TO" dconf load "${load_args[@]}" "$dir"
}

dconfcpkey () {
    key=$1
    DCONF_PROFILE=$PROFILE_TO dconf write "$key" "$(DCONF_PROFILE=$PROFILE_FROM dconf read "$key")"
}


dconfwatch () {
    echo hello
    while IFS= read -r key
    do
        echo $key
        if [[ "$key" =~ ^/ ]]
        then
            echo copy!
            dconfcpkey "$key"
        fi
    done < <(DCONF_PROFILE=$PROFILE_FROM dconf watch $DCONF_PATH)
}

if [ "$watch" -eq 1 ]
then
    dconfwatch "$DCONF_PATH"
elif [[ "$DCONF_PATH" =~ /$ ]]
then
    dconfcpdir "$DCONF_PATH"
else
    dconfcpkey "$DCONF_PATH"
fi
